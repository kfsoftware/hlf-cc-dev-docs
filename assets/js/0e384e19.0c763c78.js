"use strict";(self.webpackChunkhlf_cc_dev_docs=self.webpackChunkhlf_cc_dev_docs||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:1},c="Intro",u={unversionedId:"intro",id:"intro",title:"Intro",description:"Let's discover Docusaurus in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/hlf-cc-dev/docs/intro",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},s=[{value:"Getting Started",id:"getting-started",children:[{value:"What you&#39;ll need",id:"what-youll-need",children:[],level:3}],level:2},{value:"General diagram",id:"general-diagram",children:[],level:2},{value:"Steps to get started",id:"steps-to-get-started",children:[],level:2},{value:"Start development on your local environment",id:"start-development-on-your-local-environment",children:[],level:2}],d={toc:s};function p(e){var t=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"intro"},"Intro"),(0,a.kt)("p",null,"Let's discover ",(0,a.kt)("strong",{parentName:"p"},"Docusaurus in less than 5 minutes"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"hlf-cc-dev")," is a tool to start developing a new chaincode from your development environment."),(0,a.kt)("h3",{id:"what-youll-need"},"What you'll need"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A TLS/TCP tunnel to your local development environment (ngrok, getout, etc.)"),(0,a.kt)("li",{parentName:"ul"},"Hyperledger Fabric peer with external chaincode builder enabled."),(0,a.kt)("li",{parentName:"ul"},"Network config with admin users for all of the organizations peers you will use.")),(0,a.kt)("h2",{id:"general-diagram"},"General diagram"),(0,a.kt)("p",null,"The following diagram explains the architecture of the final solution"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Diagram",src:n(8599).Z,width:"1180",height:"1180"})),(0,a.kt)("h2",{id:"steps-to-get-started"},"Steps to get started"),(0,a.kt)("p",null,"To start the server you need the network config with the admin users for each orga"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'hlf-cc-dev serve --address ":8080" --metrics-address ":8081" --config "<PATH_TO_NETWORK_CONFIG>"\n')),(0,a.kt)("h2",{id:"start-development-on-your-local-environment"},"Start development on your local environment"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'CHAINCODE_NAME=chaincode1\nAPI_URL="http://localhost:8080/graphql"\nSIGNATURE_POLICY="OR(\'Org1MSP.member\', \'Org2MSP.member\')"\nCHAINCODE_ADDRESS_TUNNEL="4.tcp.eu.ngrok.io:13438" # can be found in ngrok output\nhlf-cc-dev start --localChaincode="localhost:9999" \\\n  --chaincodeAddress="${CHAINCODE_ADDRESS_TUNNEL}" \\\n  --signaturePolicy="${SIGNATURE_POLICY}" \\\n  --chaincode="${CHAINCODE_NAME}" \\\n  --apiUrl="${API_URL}" \\\n  --env-file="${PWD}/.env" \\\n  --pdc=./pdc.json\n')))}p.isMDXComponent=!0},8599:function(e,t,n){t.Z=n.p+"assets/images/diagram-01fb620ae81b42afea35224b87708e8d.png"}}]);